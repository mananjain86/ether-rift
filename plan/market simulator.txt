EtherRift: Market Simulator Scenarios
This document specifies the data packets that the marketSimulator.js backend service should broadcast via WebSocket for each learning topic. The frontend will listen for these packets and update the UI accordingly.
Base Message Format:
All messages should be a JSON object with a topicId and a payload.
{
  "topicId": "UNIQUE_TOPIC_ID",
  "payload": {
    // Topic-specific data
  }
}

Stable Dimension Scenarios
Topic 1: What is DeFi?
 * topicId: stable-defi-intro
 * Interaction: No market data needed. The frontend handles the guestbook simulation.
Topic 2: Understanding Liquidity Pools & AMMs
 * topicId: stable-liquidity-pools
 * Payload Format:
   { "prices": { "vETH": 1000.00, "vUSDC": 1.00 }, "lastTrade": { "type": "buy", "amount": 5.5, "asset": "vETH" } }

 * Scenario Script:
   * On user entry: Start broadcasting stable prices for vETH ($1000) and vUSDC ($1.00) every 3 seconds.
   * After user provides liquidity: Begin simulating random small trades. Every 5-10 seconds, generate a lastTrade object (randomly buy or sell of vETH) and broadcast it. This allows the frontend to show activity. The prices should remain stable.
Topic 3: Introduction to Staking
 * topicId: stable-staking
 * Payload Format:
   { "rewardRate": 0.005, "totalStaked": 1250000 }

 * Scenario Script:
   * On user entry: Broadcast a constant rewardRate (per interval) and a slowly increasing totalStaked value every 3 seconds. The frontend will use the rewardRate to calculate and display the user's accruing rewards based on their staked amount.
Topic 4: The Role of Stablecoins
 * topicId: stable-stablecoins
 * Payload Format:
   { "prices": { "vETH": 1000.00, "vUSDC": 1.00 } }

 * Scenario Script:
   * On user entry: Broadcast stable prices (vETH: $1000).
   * After user swaps vETH for vUSDC: Wait 5 seconds, then start a "market dip" event.
   * Market Dip: Over the next 30 seconds, decrement the vETH price from $1000 to $800 in smooth intervals. Keep vUSDC price at $1.00.
   * Hold: Keep the vETH price at $800 to allow the user to see the effect.
Volatile & Arbitrage Dimension Scenarios
Topic 5: Mastering Yield Farming
 * topicId: volatile-yield-farming
 * Payload Format:
   { "prices": { "vETH": 1000.00, "vUSDC": 1.00 }, "farmApy": 25.5 }

 * Scenario Script:
   * On user entry: Broadcast stable prices and a relatively high, but slowly fluctuating farmApy (e.g., between 22% and 28%) every 3 seconds. This data is for display purposes; the actual rewards are calculated and distributed on-chain.
Topic 6: The Risk of Impermanent Loss
 * topicId: volatile-impermanent-loss
 * Payload Format:
   { "prices": { "vETH": 1000.00, "vUSDC": 1.00 } }

 * Scenario Script:
   * On user entry: Broadcast stable prices (vETH: $1000).
   * After user provides liquidity: Begin a "price divergence" event.
   * Price Divergence: Over the next 60 seconds, increment the vETH price from $1000 to $2000 in smooth intervals. Keep vUSDC at $1.00.
   * Hold: Maintain the vETH price at $2000 so the frontend can calculate and display the final Impermanent Loss value.
Topic 7: Understanding Leverage & Liquidation
 * topicId: volatile-liquidation
 * Payload Format:
   { "prices": { "vETH": 1000.00 } }

 * Scenario Script:
   * On user entry: Broadcast a stable vETH price of $1000.
   * After user borrows: Wait 10 seconds, then begin a "collateral drop" event.
   * Collateral Drop: Over the next 45 seconds, decrement the vETH price from $1000 towards the user's calculated liquidation price. The frontend will use this live price to update the "Health Factor" display in real-time.
   * Trigger Liquidation: Once the price drops below the liquidation threshold, the on-chain liquidation can be triggered by a liquidator bot (or simulated by the user).
Topic 8: Cross-Exchange Arbitrage
 * topicId: arbitrage-cross-exchange
 * Payload Format:
   { "exchanges": { "cryptoMart": { "vETH": 995.00 }, "digitalBay": { "vETH": 1010.00 } } }

 * Scenario Script:
   * On user entry: Broadcast the initial price discrepancy.
   * Price Convergence: After 15 seconds, begin to slowly converge the prices. Every 5 seconds, increase CryptoMart's price by $1 and decrease DigitalBay's price by $1. This creates urgency for the user to execute the trades.
   * Equilibrium: Continue until the prices are equal, at which point the arbitrage opportunity is gone.
Topic 9: Flash Loans & Flash Swaps
 * topicId: arbitrage-flash-loan
 * Payload Format:
   { "exchanges": { "cryptoMart": { "vETH": 950.00 }, "digitalBay": { "vETH": 1050.00 } } }

 * Scenario Script:
   * On user entry: Broadcast a very large, obvious, but short-lived price discrepancy.
   * Rapid Convergence: This opportunity should be fleeting. Over just 20 seconds, rapidly converge the prices to equilibrium. This reinforces the idea that flash loans are needed for speed and scale to capture such opportunities.
